---
- name: Create directory for additional apt keyrings
  ansible.builtin.file:
    path: /etc/apt/keyrings
    state: directory
    mode: "u=rwx,g=rx,o=rx"
    owner: root
    group: root
- name: Download apt keyrings
  ansible.builtin.get_url:
    url: "{{ item.url }}"
    dest: "/etc/apt/keyrings/{{ item.name }}.asc"
    mode: "u=rwx,g=rx,o=rx"
    owner: root
    group: root
  with_items:
    - url: https://raw.githubusercontent.com/eza-community/eza/main/deb.asc
      name: gierens
- name: Add apt-repos
  ansible.builtin.apt_repository:
    repo: "deb [arch=amd64 signed-by=/etc/apt/keyrings/{{ item.keyfile }}] {{ item.url }} {{ item.suite|default(ansible_distribution_release) }} {{ item.components|default('') }}"
    filename: "{{ item.filename|default(None) }}"
  loop:
    - filename: gierens.sources
      keyfile: gierens.asc
      url: http://deb.gierens.de
      suite: stable
      components: main
- name: Install some basic apps
  package:
    name:
      - apt-utils
      - nala
      - bash
      - coreutils
      - nano
      - micro
      - tcpdump
      - htop
      - iotop-c
      - bash-completion
      - wget
      - curl
      - "{{ (ansible_architecture != 'x86_64') | ternary('exa', 'eza') }}"
      - px
      - micro
      - less
      - net-tools
      - python3-pygments
      - plocate
      - ncurses-base
      - kitty-terminfo
      - bind9-dnsutils
      - file
      - tree
      - sysstat
      - tzdata
- name: Set editor
  lineinfile:
    path: /etc/profile
    line: "export EDITOR=${EDITOR:-{{ lookup('pipe', 'which micro') }}}"
    regexp: "export EDITOR=.*"
    insertafter: "export PAGER=.*"
    create: yes
    owner: root
    group: root
    mode: u=rw,g=r,o=r
- name: Set editor via update-alternatives
  community.general.alternatives:
    name: editor
    path: "{{ lookup('pipe', 'which micro') }}"
- name: Check if we need to create profile directory
  stat:
    path: /etc/profile.d/
  register: profile_d
  changed_when: False
- name: Create bash profile directory
  file:
    path: /etc/profile.d/
    state: directory
    owner: root
    group: root
    mode: u=rwx,g=rx,o=rx
  when: not profile_d.stat.isdir
- name: Load bash profile scripts
  blockinfile:
    path: /etc/profile
    create: yes
    owner: root
    group: root
    mode: u=rw,g=r,o=r
    block: |
      for sh in /etc/profile.d/*.sh ; do
        [ -r "$sh" ] && . "$sh"
      done
      unset sh
  when: not profile_d.stat.isdir
- name: Add common aliases
  copy:
    src: bash-aliases.sh
    dest: /etc/profile.d/aliases.sh
    owner: root
    group: root
    mode: u=rw,g=r,o=r
- name: Add fancy prompt
  copy:
    src: bash-prompt.sh
    dest: /etc/profile.d/prompt.sh
    owner: root
    group: root
    mode: u=rw,g=r,o=r
- name: Set up syntax highlighting in less
  template:
    dest: /etc/profile.d/less-syntax.sh
    src: less-syntax.sh.j2
    owner: root
    group: root
    mode: u=rw,g=r,o=r
  when: ansible_pkg_mgr == 'apt'
- name: Remove misconfigured prompt config in users .bashrc
  ansible.builtin.blockinfile:
    path: "{{ item.path }}/.bashrc"
    marker: "{mark}"
    marker_begin: "# set a fancy prompt (non-color, unless we know we \"want\" color)"
    marker_end: "unset color_prompt force_color_prompt"
    owner: "{{ item.owner }}"
    group: "{{ item.group }}"
    mode: u=rw,g=r,o=r
    state: absent
  loop:
    - owner: root
      group: root
      path: /etc/skel
    - owner: root
      group: root
      path: /root
    - owner: "{{ default_user }}"
      group: users
      path: "/home/{{ default_user }}"
- name: Remove aliases clobbering aliases from /etc/profile.d/aliases.sh
  ansible.builtin.blockinfile:
    path: "{{ item.path }}/.bashrc"
    marker: "{mark}"
    marker_begin: "# enable color support of ls and also add handy aliases"
    marker_end: "# Alias definitions."
    owner: "{{ item.owner }}"
    group: "{{ item.group }}"
    mode: u=rw,g=r,o=r
    state: absent
  loop:
    - owner: root
      group: root
      path: /etc/skel
    - owner: root
      group: root
      path: /root
    - owner: "{{ default_user }}"
      group: users
      path: "/home/{{ default_user }}"
- name: Enable locales
  community.general.locale_gen:
    name: "{{ item }}"
  loop:
    - nb_NO.UTF-8
    - en_US.UTF-8
  notify:
    - Update locale
- name: Configure locales
  ansible.builtin.copy:
    src: locale
    dest: /etc/locale.conf
    owner: root
    group: root
    mode: u=rw,g=r,o=r
  notify:
    - Update locale
- name: Configure timezone
  community.general.timezone:
    name: Europe/Oslo
- name: DMA tasks
  include_tasks: dma.yml
